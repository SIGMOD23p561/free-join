# name: test/sql/copy/csv/test_copy_unicode.test
# description: Test copy statement with unicode delimiter/quote/escape
# group: [csv]

# create tables for testing
statement ok
CREATE TABLE test_unicode_1 (col_a INTEGER, col_b VARCHAR(10), col_c VARCHAR(10), col_d VARCHAR(10));

statement ok
CREATE TABLE test_unicode_2 (col_a INTEGER, col_b VARCHAR(10), col_c VARCHAR(10), col_d VARCHAR(10));

statement ok
CREATE TABLE test_unicode_3 (col_a INTEGER, col_b VARCHAR(10), col_c VARCHAR(10), col_d VARCHAR(10));

statement ok
CREATE TABLE test_unicode_4 (col_a VARCHAR, col_b VARCHAR);

# test COPY ... FROM ...
# test unicode delimiter/quote/escape
query I
COPY test_unicode_1 FROM 'test/sql/copy/csv/data/test/multi_char.csv' (DELIMITER '🦆', QUOTE 'ˮ', ESCAPE '˧');
----
4

query ITTT
SELECT * FROM test_unicode_1 ORDER BY 1 LIMIT 4;
----
0	du˧🦆ck	dˮˮu🦆ck	duck
1	douˮble	NULL	duck
2	NULL	NULL	NULL
3	duck inv˧asion	NULL	NULL

# test unicode delimiter/quote/escape that exceeds the buffer size a few times
query I
COPY test_unicode_2 FROM 'test/sql/copy/csv/data/test/multi_char_large.csv' (DELIMITER '🦆', QUOTE 'ˮ', ESCAPE '˧');
----
16384

query ITTT
SELECT * FROM test_unicode_2 ORDER BY 1 LIMIT 4;
----
16 values hashing to aba4d1f7a3b0d043a672e09344cf7d55

query I
SELECT SUM(col_a) FROM test_unicode_2;
----
134209536

# test correct shared substring behavior at buffer borders
query I
COPY test_unicode_4 FROM 'test/sql/copy/csv/data/test/shared_substring_large.csv' (DELIMITER 'AAA', ESCAPE 'AAB');
----
1

query TT
SELECT * FROM test_unicode_4;
----
2 values hashing to 0bafca4292fa123d931621a1fff765a1

# test same string for delimiter and quote
statement error
COPY test_unicode_1 FROM 'test/sql/copy/csv/data/test/multi_char.csv' (DELIMITER '🦆', QUOTE '🦆');

# escape and quote cannot be substrings of each other
statement error
COPY test_unicode_1 FROM 'test/sql/copy/csv/data/test/multi_char.csv' (ESCAPE 'du', QUOTE 'duck');

statement error
COPY test_unicode_1 FROM 'test/sql/copy/csv/data/test/multi_char.csv' (ESCAPE 'duck', QUOTE 'du');

# delimiter and quote cannot be substrings of each other
statement error
COPY test_unicode_1 FROM 'test/sql/copy/csv/data/test/multi_char.csv' (DELIMITER 'du', QUOTE 'duck');

statement error
COPY test_unicode_1 FROM 'test/sql/copy/csv/data/test/multi_char.csv' (DELIMITER 'duck', QUOTE 'du');

# delimiter and escape cannot be substrings of each other
statement error
COPY test_unicode_1 FROM 'test/sql/copy/csv/data/test/multi_char.csv' (DELIMITER 'AA', ESCAPE 'AAAA');

statement error
COPY test_unicode_1 FROM 'test/sql/copy/csv/data/test/multi_char.csv' (DELIMITER 'AAAA', ESCAPE 'AA');

# COPY ... TO ...
# test unicode delimiter/quote/escape
query I
COPY test_unicode_1 TO '__TEST_DIR__/test_unicode_1.csv' (DELIMITER '🦆', QUOTE 'ˮ', ESCAPE '˧');
----
4

statement ok
DELETE FROM test_unicode_1;

query I
COPY test_unicode_1 FROM '__TEST_DIR__/test_unicode_1.csv' (DELIMITER '🦆', QUOTE 'ˮ', ESCAPE '˧');
----
4

query ITTT
SELECT * FROM test_unicode_1 ORDER BY 1 LIMIT 4;
----
0	du˧🦆ck	dˮˮu🦆ck	duck
1	douˮble	NULL	duck
2	NULL	NULL	NULL
3	duck inv˧asion	NULL	NULL

# test unicode delimiter/quote/escape
query I
COPY test_unicode_2 TO '__TEST_DIR__/test_unicode_2.csv' (DELIMITER '🦆', QUOTE 'ˮ', ESCAPE '˧');
----
16384

statement ok
DELETE FROM test_unicode_2;

query I
COPY test_unicode_2 FROM '__TEST_DIR__/test_unicode_2.csv' (DELIMITER '🦆', QUOTE 'ˮ', ESCAPE '˧');
----
16384

query ITTT
SELECT * FROM test_unicode_2 ORDER BY 1 LIMIT 4;
----
16 values hashing to aba4d1f7a3b0d043a672e09344cf7d55

query R
SELECT SUM(col_a) FROM test_unicode_2;
----
134209536.000000

